version: '3.7'

services:
  mongodb:
    build: ./mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: WEB_APP_ROOT_USER_PWD
      MONGO_INITDB_DATABASE: WEB_APP_DB_NAME
      MONGO_ADMIN_USERNAME: WEB_APP_DB_NAME
      MONGO_ADMIN_PASSWORD: WEB_APP_DB_PWD
    volumes:
      - mongoData:/data/db
      - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

    ports:
      - "27017:27017"

  postgres:
    build: ./postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: WEB_APP_DB_PWD
      POSTGRES_USER: WEB_APP_DB_NAME
      POSTGRES_DB: WEB_APP_DB_NAME
    volumes:
      - pgdata:/var/lib/postgresql/data 
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 1s
      timeout: 5s
      retries: 10
    ports:
      - "5432:5432"

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: base
    restart: always
    volumes:
      - ./server/src:/app/src
      - ./server/nodemon.json:/app/nodemon.json
    environment:
      MONGO_URI: mongodb://WEB_APP_DB_NAME:WEB_APP_DB_PWD@mongodb:27017/?authSource=WEB_APP_DB_NAME
      MONGO_INITDB_DATABASE: WEB_APP_DB_NAME
      PGUSER: WEB_APP_DB_NAME
      PGPASSWORD: WEB_APP_DB_PWD
      PGHOST: postgres
      PGPORT: 5432
      PGDATABASE: WEB_APP_DB_NAME
    ports:
      - "3000:3000"
    depends_on:
      postgres:
       condition: service_healthy
    command: npm run dev

  webui:
    build:
      context: ./webui
      dockerfile: Dockerfile
    restart: always
    command: npm start
    volumes:
      - ./webui:/app
    depends_on:
      - server
    ports:
      - "8080:8080"
    expose:
      - "8080"

volumes:
  pgdata:
  mongoData:
